import "./chunk-LK32TJAX.js";

// node_modules/datebook/dist/datebook.min.mjs
var RECURRENCE = {
  FREQUENCY: {
    DAILY: "DAILY",
    WEEKLY: "WEEKLY",
    MONTHLY: "MONTHLY",
    YEARLY: "YEARLY"
  }
};
var FORMAT = {
  DATE: "YYYYMMDD",
  TIME: "ThhmmssZ",
  FULL: "YYYYMMDDThhmmssZ",
  NO_UTC_FULL: "YYYYMMDDThhmmss",
  OUTLOOK_DATE: "YYYY-MM-DD",
  OUTLOOK_TIME: "Thh:mm:ssZ",
  OUTLOOK_FULL: "YYYY-MM-DDThh:mm:ssZ"
};
var URL = {
  YAHOO: "https://calendar.yahoo.com/",
  GOOGLE: "https://calendar.google.com/calendar/render",
  OUTLOOK: "https://outlook.{{host}}.com/calendar/0/deeplink/compose"
};
var addLeadingZero = function(n) {
  if (n === void 0) {
    n = "";
  }
  return "0".concat(parseInt(n.toString(), 10)).slice(-2);
};
var getDuration = function(start, end) {
  var seconds = Math.floor((end - start) / 1e3);
  var hours = Math.floor(seconds / 3600);
  var mins = seconds / 3600 % 1 * 60;
  return "".concat(addLeadingZero(hours)).concat(addLeadingZero(mins));
};
var getHoursDiff = function(start, end) {
  var seconds = Math.floor((end - start) / 1e3);
  return Math.floor(seconds / 3600);
};
var getRecurrenceLengthDays = function(recurrence) {
  var frequency = recurrence.frequency, interval = recurrence.interval;
  var FREQUENCY = RECURRENCE.FREQUENCY;
  if (interval) {
    switch (frequency) {
      case FREQUENCY.YEARLY:
        return interval * 365.25;
      case FREQUENCY.MONTHLY:
        return interval * 30.42;
      case FREQUENCY.WEEKLY:
        return interval * 7;
      default:
        return interval;
    }
  }
  return 365.25 * 100;
};
var formatDate = function(d, format) {
  if (d === void 0) {
    d = /* @__PURE__ */ new Date();
  }
  var dateValues = {
    YYYY: d.getUTCFullYear(),
    MM: addLeadingZero(d.getUTCMonth() + 1),
    DD: addLeadingZero(d.getUTCDate()),
    hh: addLeadingZero(d.getUTCHours()),
    mm: addLeadingZero(d.getUTCMinutes()),
    ss: addLeadingZero(d.getUTCSeconds())
  };
  return Object.keys(dateValues).reduce(function(date, key) {
    return date.replace(key, dateValues[key].toString());
  }, format);
};
var formatDateNoUtc = function(d, format) {
  if (d === void 0) {
    d = /* @__PURE__ */ new Date();
  }
  var dateValues = {
    YYYY: d.getFullYear(),
    MM: addLeadingZero(d.getMonth() + 1),
    DD: addLeadingZero(d.getDate()),
    hh: addLeadingZero(d.getHours()),
    mm: addLeadingZero(d.getMinutes()),
    ss: addLeadingZero(d.getSeconds())
  };
  return Object.keys(dateValues).reduce(function(date, key) {
    return date.replace(key, dateValues[key].toString());
  }, format);
};
var getTimeCreated = function() {
  return formatDate(/* @__PURE__ */ new Date(), FORMAT.FULL);
};
var incrementDate = function(dateInput, days) {
  var additionalTime = days * 864e5;
  var newDate = /* @__PURE__ */ new Date();
  newDate.setTime(dateInput.getTime() + additionalTime);
  return newDate;
};
var time = {
  addLeadingZero,
  getDuration,
  getHoursDiff,
  getRecurrenceLengthDays,
  formatDate,
  formatDateNoUtc,
  getTimeCreated,
  incrementDate
};
var CalendarBase = (
  /** @class */
  function() {
    function CalendarBase2(options) {
      var _this = this;
      this.isAllDay = false;
      this.description = "";
      this.title = "";
      this.location = "";
      this.start = /* @__PURE__ */ new Date();
      this.end = /* @__PURE__ */ new Date();
      this.params = {};
      this.attendees = [];
      this.setText = function(options2) {
        _this.description = options2.description || "";
        _this.title = options2.title || "";
        _this.location = options2.location || "";
      };
      this.setTimestamps = function(options2) {
        _this.isAllDay = !options2.end;
        _this.start = options2.start;
        _this.end = options2.end || time.incrementDate(_this.start, 1);
        _this.recurrence = options2.recurrence;
      };
      this.setParam = function(key, value) {
        _this.params[key] = value;
        return _this;
      };
      this.setText(options);
      this.setTimestamps(options);
      this.setAttendees(options);
    }
    CalendarBase2.prototype.setAttendees = function(options) {
      this.attendees = Array.isArray(options.attendees) ? options.attendees : [];
    };
    return CalendarBase2;
  }()
);
var extendStatics = function(d, b) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
    d2.__proto__ = b2;
  } || function(d2, b2) {
    for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
  };
  return extendStatics(d, b);
};
function __extends(d, b) {
  if (typeof b !== "function" && b !== null)
    throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
  extendStatics(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
  __assign = Object.assign || function __assign2(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}
var toParamString = function(params, delimiter, transformFn) {
  if (delimiter === void 0) {
    delimiter = ";";
  }
  if (transformFn === void 0) {
    transformFn = function(s) {
      return s;
    };
  }
  var paramString = [];
  for (var key in params) {
    if (params.hasOwnProperty(key) && params[key] !== void 0) {
      paramString.push("".concat(key, "=").concat(transformFn(params[key])));
    }
  }
  return paramString.join(delimiter);
};
var toQueryString = function(params) {
  var filteredParams = Object.keys(params).filter(function(p) {
    return params[p] !== null;
  }).reduce(function(p, k) {
    var _a;
    return __assign(__assign({}, p), (_a = {}, _a[k] = params[k], _a));
  }, {});
  return toParamString(filteredParams, "&", encodeURIComponent);
};
var toIcsParamString = function(params) {
  return toParamString(params, ";");
};
var toMailtoList = function(attendees) {
  return attendees.map(function(_a) {
    var email = _a.email, name = _a.name;
    return name ? "".concat(name, " <").concat(email, ">") : email;
  });
};
var toProperCase = function(s) {
  return [
    s[0].toUpperCase(),
    s.slice(-s.length + 1).toLowerCase()
  ].join("");
};
var data = {
  toParamString,
  toQueryString,
  toIcsParamString,
  toMailtoList,
  toProperCase
};
var formatText = function(str) {
  if (str === void 0) {
    str = "";
  }
  return str.replace(/\\/g, "\\\\").replace(/\n/g, "\\n").replace(/[,;]/g, "\\$&");
};
var getUid = function() {
  return Math.random().toString(36).substr(2);
};
var getProdId = function() {
  return typeof window !== "undefined" ? window.location.host : "datebook";
};
var getRrule = function(recurrence) {
  var _a, _b;
  var rrule = {
    FREQ: recurrence.frequency,
    INTERVAL: (_a = recurrence.interval) === null || _a === void 0 ? void 0 : _a.toString(),
    COUNT: (_b = recurrence.count) === null || _b === void 0 ? void 0 : _b.toString(),
    WKST: recurrence.weekstart,
    BYDAY: recurrence.weekdays,
    BYMONTHDAY: recurrence.monthdays
  };
  if (recurrence.end) {
    rrule.UNTIL = time.formatDate(recurrence.end, FORMAT.FULL);
  }
  return data.toIcsParamString(rrule);
};
var ics = {
  formatText,
  getUid,
  getProdId,
  getRrule
};
var GoogleCalendar = (
  /** @class */
  function(_super) {
    __extends(GoogleCalendar2, _super);
    function GoogleCalendar2(opts) {
      var _this = _super.call(this, opts) || this;
      _this.setInitialParams = function() {
        var timestampFormat = FORMAT.DATE;
        if (!_this.isAllDay) {
          timestampFormat += FORMAT.TIME;
        }
        var dates = [
          time.formatDate(_this.start, timestampFormat),
          time.formatDate(_this.end, timestampFormat)
        ].join("/");
        _this.setParam("action", "TEMPLATE").setParam("dates", dates).setParam("text", _this.title).setParam("details", _this.description).setParam("location", _this.location).setParam("allday", _this.isAllDay.toString());
        if (_this.recurrence) {
          _this.setParam("recur", "RRULE:".concat(ics.getRrule(_this.recurrence)));
        }
        if (_this.attendees.length > 0) {
          _this.setParam("add", data.toMailtoList(_this.attendees).join(","));
        }
      };
      _this.render = function() {
        var baseUrl = URL.GOOGLE;
        var queryString = data.toQueryString(_this.params);
        return "".concat(baseUrl, "?").concat(queryString);
      };
      _this.setInitialParams();
      return _this;
    }
    return GoogleCalendar2;
  }(CalendarBase)
);
var YahooCalendar = (
  /** @class */
  function(_super) {
    __extends(YahooCalendar2, _super);
    function YahooCalendar2(opts) {
      var _this = _super.call(this, opts) || this;
      _this.setInitialParams = function() {
        _this.setParam("v", "60").setParam("title", _this.title).setParam("desc", _this.description).setParam("in_loc", _this.location);
        _this.setTimeParams();
        if (_this.attendees.length > 0) {
          _this.setParam("inv_list", data.toMailtoList(_this.attendees).join(","));
        }
      };
      _this.setTimeParams = function() {
        if (_this.isAllDay) {
          _this.setParam("dur", "allday").setParam("st", time.formatDateNoUtc(_this.start, FORMAT.DATE));
        } else {
          _this.setParam("st", time.formatDateNoUtc(_this.start, FORMAT.NO_UTC_FULL));
          if (time.getHoursDiff(_this.start.getTime(), _this.end.getTime()) > 99) {
            _this.setParam("et", time.formatDateNoUtc(_this.end, FORMAT.NO_UTC_FULL));
          } else {
            _this.setParam("dur", time.getDuration(_this.start.getTime(), _this.end.getTime()));
          }
        }
      };
      _this.render = function() {
        var baseUrl = URL.YAHOO;
        var queryString = data.toQueryString(_this.params);
        return "".concat(baseUrl, "?").concat(queryString);
      };
      _this.setInitialParams();
      return _this;
    }
    return YahooCalendar2;
  }(CalendarBase)
);
var OutlookCalendar = (
  /** @class */
  function(_super) {
    __extends(OutlookCalendar2, _super);
    function OutlookCalendar2(opts) {
      var _this = _super.call(this, opts) || this;
      _this.baseUrl = URL.OUTLOOK;
      _this.setInitialParams = function() {
        var timestampFormat = FORMAT.OUTLOOK_DATE;
        if (!_this.isAllDay) {
          timestampFormat += FORMAT.OUTLOOK_TIME;
        }
        _this.setParam("rru", "addevent").setParam("path", "/calendar/action/compose").setParam("startdt", time.formatDate(_this.start, timestampFormat)).setParam("enddt", time.formatDate(_this.end, timestampFormat)).setParam("subject", _this.title).setParam("body", _this.description).setParam("location", _this.location).setParam("allday", _this.isAllDay.toString());
        if (_this.attendees.length > 0) {
          _this.setParam("to", data.toMailtoList(_this.attendees).join(","));
        }
      };
      _this.setHost = function(host) {
        if (["live", "office"].includes(host)) {
          _this.baseUrl = URL.OUTLOOK.replace("{{host}}", host);
        }
        return _this;
      };
      _this.render = function() {
        var queryString = data.toQueryString(_this.params);
        return "".concat(_this.baseUrl, "?").concat(queryString);
      };
      _this.setInitialParams();
      _this.setHost("live");
      return _this;
    }
    return OutlookCalendar2;
  }(CalendarBase)
);
var ICalendar = (
  /** @class */
  function(_super) {
    __extends(ICalendar2, _super);
    function ICalendar2(opts) {
      var _this = _super.call(this, opts) || this;
      _this.additionalEvents = [];
      _this.properties = [];
      _this.meta = {};
      _this.setInitialParams = function() {
        _this.setMeta("UID", ics.getUid()).setMeta("DTSTAMP", time.getTimeCreated()).addProperty("CLASS", "PUBLIC").addProperty("DESCRIPTION", ics.formatText(_this.description)).addProperty("LOCATION", ics.formatText(_this.location)).addProperty("SUMMARY", ics.formatText(_this.title)).addProperty("TRANSP", "TRANSPARENT");
        if (_this.isAllDay) {
          _this.addProperty("DTSTART;VALUE=DATE", time.formatDateNoUtc(_this.start, FORMAT.DATE)).addProperty("DTEND;VALUE=DATE", time.formatDateNoUtc(time.incrementDate(_this.start, 1), FORMAT.DATE));
        } else {
          _this.addProperty("DTSTART", time.formatDate(_this.start, FORMAT.FULL)).addProperty("DTEND", time.formatDate(_this.end, FORMAT.FULL));
        }
        if (_this.recurrence) {
          _this.addProperty("RRULE", ics.getRrule(_this.recurrence));
        }
        if (_this.attendees.length > 0) {
          _this.attendees.forEach(function(_a) {
            var email = _a.email, name = _a.name, _b = _a.icsOptions, icsOptions = _b === void 0 ? {} : _b;
            var params = _this.getAttendeeParams(icsOptions, name);
            var mailto = "MAILTO:".concat(email);
            _this.addProperty(params, mailto);
          });
        }
      };
      _this.getAttendeeParams = function(options, name) {
        var params = {};
        if (name)
          params["CN"] = name;
        if (options.delegatedFrom)
          params["DELEGATED-FROM"] = options.delegatedFrom;
        if (options.partStat)
          params["PARTSTAT"] = options.partStat;
        if (options.role)
          params["ROLE"] = options.role;
        if (options.sentBy)
          params["SENT-BY"] = options.sentBy;
        params["RSVP"] = options.rsvp ? "TRUE" : "FALSE";
        var paramString = data.toParamString(params, ";");
        return "ATTENDEE;".concat(paramString);
      };
      _this.getAlarmDuration = function(duration) {
        var features = [
          "".concat(duration.weeks, "W"),
          "".concat(duration.days, "D"),
          "".concat(duration.hours, "H"),
          "".concat(duration.minutes, "M"),
          "".concat(duration.seconds, "S")
        ].filter(function(s) {
          return /^[0-9]+[A-Z]$/.exec(s);
        });
        features.unshift(duration.after ? "PT" : "-PT");
        return features.join("");
      };
      _this.getMeta = function() {
        return Object.keys(_this.meta).map(function(key) {
          return "".concat(key, ":").concat(_this.meta[key]);
        });
      };
      _this.setMeta = function(key, value) {
        _this.meta[key] = value;
        return _this;
      };
      _this.addEvent = function(event) {
        _this.additionalEvents.push(event);
        return _this;
      };
      _this.addProperty = function(key, value) {
        if (typeof value === "object") {
          _this.properties.push("BEGIN:".concat(key));
          for (var k in value) {
            _this.addProperty(k, value[k]);
          }
          _this.properties.push("END:".concat(key));
        } else {
          _this.properties.push("".concat(key, ":").concat(value.toString()));
        }
        return _this;
      };
      _this.addAlarm = function(alarm) {
        var value = {
          ACTION: alarm.action
        };
        if (alarm.description)
          value.DESCRIPTION = ics.formatText(alarm.description);
        if (alarm.summary)
          value.SUMMARY = ics.formatText(alarm.summary);
        if (alarm.duration)
          value.DURATION = _this.getAlarmDuration(alarm.duration);
        if (alarm.repeat)
          value.REPEAT = alarm.repeat;
        if (alarm.attach) {
          var key = alarm.attach.params ? "ATTACH;".concat(alarm.attach.params) : "ATTACH";
          value[key] = alarm.attach.url;
        }
        if (alarm.trigger instanceof Date) {
          value["TRIGGER;VALUE=DATE-TIME"] = time.formatDate(alarm.trigger, FORMAT.FULL);
        } else {
          value["TRIGGER"] = _this.getAlarmDuration(alarm.trigger);
        }
        return _this.addProperty("VALARM", value);
      };
      _this.render = function() {
        var events = __spreadArray([
          _this
        ], _this.additionalEvents, true);
        var vEvents = events.reduce(function(properties, calendar) {
          return __spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], properties, true), [
            "BEGIN:VEVENT"
          ], false), calendar.properties, true), calendar.getMeta(), true), [
            "END:VEVENT"
          ], false);
        }, []);
        return __spreadArray(__spreadArray([
          "BEGIN:VCALENDAR",
          "VERSION:2.0"
        ], vEvents, true), [
          "PRODID:".concat(ics.getProdId()),
          "END:VCALENDAR"
        ], false).join("\n");
      };
      _this.setInitialParams();
      return _this;
    }
    return ICalendar2;
  }(CalendarBase)
);
export {
  CalendarBase,
  GoogleCalendar,
  ICalendar,
  OutlookCalendar,
  YahooCalendar
};
//# sourceMappingURL=datebook.js.map
